// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[LyricsListView] Test LyricsListView snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    flex={1}
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
        },
      ]
    }
  >
    <View
      mb={22.15421115065243}
      pt={2}
      style={
        Array [
          Object {
            "marginBottom": 22.15421115065243,
            "paddingTop": 8,
          },
        ]
      }
    >
      <BVLinearGradient
        colors={
          Array [
            4279234493,
            9763859,
          ]
        }
        endPoint={
          Object {
            "x": 0.5,
            "y": 1,
          }
        }
        locations={null}
        startPoint={
          Object {
            "x": 0.5,
            "y": 0,
          }
        }
        style={
          Object {
            "backgroundColor": "transparent",
            "flex": 1,
            "height": 240.53143534994066,
            "position": "absolute",
            "width": "100%",
          }
        }
      />
      <View
        alignItems="center"
        flexDirection="row"
        height={69.62752075919336}
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "height": 69.62752075919336,
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          ml={57.69230769230769}
          style={
            Array [
              Object {
                "marginLeft": 57.69230769230769,
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            h={39.56109134045077}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "height": 39.56109134045077,
                  "width": 48.07692307692307,
                },
              ]
            }
            w={48.07692307692307}
          >
            <Image
              accessibilityLabel=" "
              alt=" "
              maxWidth="100%"
              onError={[Function]}
              resizeMode="contain"
              size="100%"
              source={
                Object {
                  "testUri": "../../../src/Assets/Image/icon_main_left_arrow.png",
                }
              }
              style={
                Array [
                  Object {
                    "height": "100%",
                    "maxWidth": "100%",
                    "width": "100%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <View
          alignItems="center"
          display="flex"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="#1a1b1c"
              fontFamily="body"
              fontSize={33.80850587417971}
              fontStyle="normal"
              fontWeight={600}
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#1a1b1c",
                    "fontSize": 33.80850587417971,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
            >
              가사 쓰기
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <View
          mr={57.69230769230769}
          style={
            Array [
              Object {
                "marginRight": 57.69230769230769,
              },
            ]
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            h={39.56109134045077}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "height": 39.56109134045077,
                  "width": 48.07692307692307,
                },
              ]
            }
            w={48.07692307692307}
          >
            <Image
              accessibilityLabel=" "
              alt=" "
              maxWidth="100%"
              onError={[Function]}
              resizeMode="contain"
              size="100%"
              source={
                Object {
                  "testUri": "../../../src/Assets/Image/icon_menu_addLyrics.png",
                }
              }
              style={
                Array [
                  Object {
                    "height": "100%",
                    "maxWidth": "100%",
                    "width": "100%",
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
    <RCTScrollView
      closeOnRowBeginSwipe={false}
      closeOnRowOpen={true}
      closeOnRowPress={true}
      closeOnScroll={true}
      directionalDistanceChangeThreshold={2}
      disableHiddenLayoutCalculation={false}
      disableLeftSwipe={false}
      disableRightSwipe={false}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      leftOpenValue={0}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      previewFirstRow={false}
      previewOpenDelay={3000}
      previewOpenValue={-40}
      previewRepeat={false}
      previewRepeatDelay={1000}
      previewRowKey="0"
      recalculateHiddenLayout={false}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderHiddenItem={[Function]}
      renderItem={[Function]}
      rightOpenValue={-165}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      swipeToClosePercent={50}
      swipeToOpenPercent={50}
      swipeToOpenVelocityContribution={0}
      updateCellsBatchingPeriod={50}
      useAnimatedList={false}
      useNativeDriver={true}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View />
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;
